// Generated by view binder compiler. Do not edit!
package com.campus.fitintent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.campus.fitintent.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.chip.Chip;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHabitBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnMoreOptions;

  @NonNull
  public final MaterialCheckBox checkboxCompleted;

  @NonNull
  public final Chip chipCategory;

  @NonNull
  public final LinearLayout layoutActions;

  @NonNull
  public final LinearLayout layoutHabitContent;

  @NonNull
  public final LinearLayout layoutProgress;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final TextView tvCompletionRate;

  @NonNull
  public final TextView tvCurrentStreakValue;

  @NonNull
  public final TextView tvDaysRemaining;

  @NonNull
  public final TextView tvHabitDescription;

  @NonNull
  public final TextView tvHabitName;

  @NonNull
  public final View viewColorIndicator;

  private ItemHabitBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnMoreOptions, @NonNull MaterialCheckBox checkboxCompleted,
      @NonNull Chip chipCategory, @NonNull LinearLayout layoutActions,
      @NonNull LinearLayout layoutHabitContent, @NonNull LinearLayout layoutProgress,
      @NonNull LinearProgressIndicator progressBar, @NonNull TextView tvCompletionRate,
      @NonNull TextView tvCurrentStreakValue, @NonNull TextView tvDaysRemaining,
      @NonNull TextView tvHabitDescription, @NonNull TextView tvHabitName,
      @NonNull View viewColorIndicator) {
    this.rootView = rootView;
    this.btnMoreOptions = btnMoreOptions;
    this.checkboxCompleted = checkboxCompleted;
    this.chipCategory = chipCategory;
    this.layoutActions = layoutActions;
    this.layoutHabitContent = layoutHabitContent;
    this.layoutProgress = layoutProgress;
    this.progressBar = progressBar;
    this.tvCompletionRate = tvCompletionRate;
    this.tvCurrentStreakValue = tvCurrentStreakValue;
    this.tvDaysRemaining = tvDaysRemaining;
    this.tvHabitDescription = tvHabitDescription;
    this.tvHabitName = tvHabitName;
    this.viewColorIndicator = viewColorIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_habit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHabitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMoreOptions;
      MaterialButton btnMoreOptions = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreOptions == null) {
        break missingId;
      }

      id = R.id.checkboxCompleted;
      MaterialCheckBox checkboxCompleted = ViewBindings.findChildViewById(rootView, id);
      if (checkboxCompleted == null) {
        break missingId;
      }

      id = R.id.chipCategory;
      Chip chipCategory = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory == null) {
        break missingId;
      }

      id = R.id.layoutActions;
      LinearLayout layoutActions = ViewBindings.findChildViewById(rootView, id);
      if (layoutActions == null) {
        break missingId;
      }

      id = R.id.layoutHabitContent;
      LinearLayout layoutHabitContent = ViewBindings.findChildViewById(rootView, id);
      if (layoutHabitContent == null) {
        break missingId;
      }

      id = R.id.layoutProgress;
      LinearLayout layoutProgress = ViewBindings.findChildViewById(rootView, id);
      if (layoutProgress == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tvCompletionRate;
      TextView tvCompletionRate = ViewBindings.findChildViewById(rootView, id);
      if (tvCompletionRate == null) {
        break missingId;
      }

      id = R.id.tvCurrentStreakValue;
      TextView tvCurrentStreakValue = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentStreakValue == null) {
        break missingId;
      }

      id = R.id.tvDaysRemaining;
      TextView tvDaysRemaining = ViewBindings.findChildViewById(rootView, id);
      if (tvDaysRemaining == null) {
        break missingId;
      }

      id = R.id.tvHabitDescription;
      TextView tvHabitDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvHabitDescription == null) {
        break missingId;
      }

      id = R.id.tvHabitName;
      TextView tvHabitName = ViewBindings.findChildViewById(rootView, id);
      if (tvHabitName == null) {
        break missingId;
      }

      id = R.id.viewColorIndicator;
      View viewColorIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewColorIndicator == null) {
        break missingId;
      }

      return new ItemHabitBinding((MaterialCardView) rootView, btnMoreOptions, checkboxCompleted,
          chipCategory, layoutActions, layoutHabitContent, layoutProgress, progressBar,
          tvCompletionRate, tvCurrentStreakValue, tvDaysRemaining, tvHabitDescription, tvHabitName,
          viewColorIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
