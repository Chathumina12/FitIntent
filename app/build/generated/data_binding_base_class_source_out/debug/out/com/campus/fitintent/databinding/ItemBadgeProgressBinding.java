// Generated by view binder compiler. Do not edit!
package com.campus.fitintent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.campus.fitintent.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBadgeProgressBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardBadgeBackground;

  @NonNull
  public final Chip chipRarity;

  @NonNull
  public final ImageView imgBadgeIcon;

  @NonNull
  public final CircularProgressIndicator progressBadge;

  @NonNull
  public final LinearProgressIndicator progressLinear;

  @NonNull
  public final TextView tvBadgeDescription;

  @NonNull
  public final TextView tvBadgeName;

  @NonNull
  public final TextView tvBadgePoints;

  @NonNull
  public final TextView tvProgressPercentage;

  @NonNull
  public final TextView tvProgressText;

  private ItemBadgeProgressBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardBadgeBackground, @NonNull Chip chipRarity,
      @NonNull ImageView imgBadgeIcon, @NonNull CircularProgressIndicator progressBadge,
      @NonNull LinearProgressIndicator progressLinear, @NonNull TextView tvBadgeDescription,
      @NonNull TextView tvBadgeName, @NonNull TextView tvBadgePoints,
      @NonNull TextView tvProgressPercentage, @NonNull TextView tvProgressText) {
    this.rootView = rootView;
    this.cardBadgeBackground = cardBadgeBackground;
    this.chipRarity = chipRarity;
    this.imgBadgeIcon = imgBadgeIcon;
    this.progressBadge = progressBadge;
    this.progressLinear = progressLinear;
    this.tvBadgeDescription = tvBadgeDescription;
    this.tvBadgeName = tvBadgeName;
    this.tvBadgePoints = tvBadgePoints;
    this.tvProgressPercentage = tvProgressPercentage;
    this.tvProgressText = tvProgressText;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBadgeProgressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBadgeProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_badge_progress, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBadgeProgressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardBadgeBackground;
      MaterialCardView cardBadgeBackground = ViewBindings.findChildViewById(rootView, id);
      if (cardBadgeBackground == null) {
        break missingId;
      }

      id = R.id.chipRarity;
      Chip chipRarity = ViewBindings.findChildViewById(rootView, id);
      if (chipRarity == null) {
        break missingId;
      }

      id = R.id.imgBadgeIcon;
      ImageView imgBadgeIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgBadgeIcon == null) {
        break missingId;
      }

      id = R.id.progressBadge;
      CircularProgressIndicator progressBadge = ViewBindings.findChildViewById(rootView, id);
      if (progressBadge == null) {
        break missingId;
      }

      id = R.id.progressLinear;
      LinearProgressIndicator progressLinear = ViewBindings.findChildViewById(rootView, id);
      if (progressLinear == null) {
        break missingId;
      }

      id = R.id.tvBadgeDescription;
      TextView tvBadgeDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvBadgeDescription == null) {
        break missingId;
      }

      id = R.id.tvBadgeName;
      TextView tvBadgeName = ViewBindings.findChildViewById(rootView, id);
      if (tvBadgeName == null) {
        break missingId;
      }

      id = R.id.tvBadgePoints;
      TextView tvBadgePoints = ViewBindings.findChildViewById(rootView, id);
      if (tvBadgePoints == null) {
        break missingId;
      }

      id = R.id.tvProgressPercentage;
      TextView tvProgressPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvProgressPercentage == null) {
        break missingId;
      }

      id = R.id.tvProgressText;
      TextView tvProgressText = ViewBindings.findChildViewById(rootView, id);
      if (tvProgressText == null) {
        break missingId;
      }

      return new ItemBadgeProgressBinding((MaterialCardView) rootView, cardBadgeBackground,
          chipRarity, imgBadgeIcon, progressBadge, progressLinear, tvBadgeDescription, tvBadgeName,
          tvBadgePoints, tvProgressPercentage, tvProgressText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
