// Generated by view binder compiler. Do not edit!
package com.campus.fitintent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.campus.fitintent.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNutritionTipBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnFavorite;

  @NonNull
  public final MaterialButton btnShare;

  @NonNull
  public final MaterialCardView cardCategoryIcon;

  @NonNull
  public final Chip chipCategory;

  @NonNull
  public final ImageView imgCategoryIcon;

  @NonNull
  public final LinearLayout layoutActions;

  @NonNull
  public final LinearLayout layoutBenefits;

  @NonNull
  public final LinearLayout layoutTipContent;

  @NonNull
  public final LinearLayout layoutTipDetails;

  @NonNull
  public final TextView tvBenefits;

  @NonNull
  public final TextView tvDifficulty;

  @NonNull
  public final TextView tvTipDescription;

  @NonNull
  public final TextView tvTipTitle;

  private ItemNutritionTipBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnFavorite, @NonNull MaterialButton btnShare,
      @NonNull MaterialCardView cardCategoryIcon, @NonNull Chip chipCategory,
      @NonNull ImageView imgCategoryIcon, @NonNull LinearLayout layoutActions,
      @NonNull LinearLayout layoutBenefits, @NonNull LinearLayout layoutTipContent,
      @NonNull LinearLayout layoutTipDetails, @NonNull TextView tvBenefits,
      @NonNull TextView tvDifficulty, @NonNull TextView tvTipDescription,
      @NonNull TextView tvTipTitle) {
    this.rootView = rootView;
    this.btnFavorite = btnFavorite;
    this.btnShare = btnShare;
    this.cardCategoryIcon = cardCategoryIcon;
    this.chipCategory = chipCategory;
    this.imgCategoryIcon = imgCategoryIcon;
    this.layoutActions = layoutActions;
    this.layoutBenefits = layoutBenefits;
    this.layoutTipContent = layoutTipContent;
    this.layoutTipDetails = layoutTipDetails;
    this.tvBenefits = tvBenefits;
    this.tvDifficulty = tvDifficulty;
    this.tvTipDescription = tvTipDescription;
    this.tvTipTitle = tvTipTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNutritionTipBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNutritionTipBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_nutrition_tip, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNutritionTipBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFavorite;
      MaterialButton btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.btnShare;
      MaterialButton btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.cardCategoryIcon;
      MaterialCardView cardCategoryIcon = ViewBindings.findChildViewById(rootView, id);
      if (cardCategoryIcon == null) {
        break missingId;
      }

      id = R.id.chipCategory;
      Chip chipCategory = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory == null) {
        break missingId;
      }

      id = R.id.imgCategoryIcon;
      ImageView imgCategoryIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgCategoryIcon == null) {
        break missingId;
      }

      id = R.id.layoutActions;
      LinearLayout layoutActions = ViewBindings.findChildViewById(rootView, id);
      if (layoutActions == null) {
        break missingId;
      }

      id = R.id.layoutBenefits;
      LinearLayout layoutBenefits = ViewBindings.findChildViewById(rootView, id);
      if (layoutBenefits == null) {
        break missingId;
      }

      id = R.id.layoutTipContent;
      LinearLayout layoutTipContent = ViewBindings.findChildViewById(rootView, id);
      if (layoutTipContent == null) {
        break missingId;
      }

      id = R.id.layoutTipDetails;
      LinearLayout layoutTipDetails = ViewBindings.findChildViewById(rootView, id);
      if (layoutTipDetails == null) {
        break missingId;
      }

      id = R.id.tvBenefits;
      TextView tvBenefits = ViewBindings.findChildViewById(rootView, id);
      if (tvBenefits == null) {
        break missingId;
      }

      id = R.id.tvDifficulty;
      TextView tvDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (tvDifficulty == null) {
        break missingId;
      }

      id = R.id.tvTipDescription;
      TextView tvTipDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvTipDescription == null) {
        break missingId;
      }

      id = R.id.tvTipTitle;
      TextView tvTipTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTipTitle == null) {
        break missingId;
      }

      return new ItemNutritionTipBinding((MaterialCardView) rootView, btnFavorite, btnShare,
          cardCategoryIcon, chipCategory, imgCategoryIcon, layoutActions, layoutBenefits,
          layoutTipContent, layoutTipDetails, tvBenefits, tvDifficulty, tvTipDescription,
          tvTipTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
