// Generated by view binder compiler. Do not edit!
package com.campus.fitintent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.campus.fitintent.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemWorkoutFeaturedBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnStartWorkout;

  @NonNull
  public final MaterialCardView cardWorkoutIcon;

  @NonNull
  public final Chip chipCategory;

  @NonNull
  public final Chip chipDifficulty;

  @NonNull
  public final ImageView imgWorkoutIcon;

  @NonNull
  public final LinearLayout layoutWorkoutDetails;

  @NonNull
  public final LinearLayout layoutWorkoutInfo;

  @NonNull
  public final LinearLayout layoutWorkoutStats;

  @NonNull
  public final TextView tvCalories;

  @NonNull
  public final TextView tvDuration;

  @NonNull
  public final TextView tvWorkoutDescription;

  @NonNull
  public final TextView tvWorkoutName;

  private ItemWorkoutFeaturedBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnStartWorkout, @NonNull MaterialCardView cardWorkoutIcon,
      @NonNull Chip chipCategory, @NonNull Chip chipDifficulty, @NonNull ImageView imgWorkoutIcon,
      @NonNull LinearLayout layoutWorkoutDetails, @NonNull LinearLayout layoutWorkoutInfo,
      @NonNull LinearLayout layoutWorkoutStats, @NonNull TextView tvCalories,
      @NonNull TextView tvDuration, @NonNull TextView tvWorkoutDescription,
      @NonNull TextView tvWorkoutName) {
    this.rootView = rootView;
    this.btnStartWorkout = btnStartWorkout;
    this.cardWorkoutIcon = cardWorkoutIcon;
    this.chipCategory = chipCategory;
    this.chipDifficulty = chipDifficulty;
    this.imgWorkoutIcon = imgWorkoutIcon;
    this.layoutWorkoutDetails = layoutWorkoutDetails;
    this.layoutWorkoutInfo = layoutWorkoutInfo;
    this.layoutWorkoutStats = layoutWorkoutStats;
    this.tvCalories = tvCalories;
    this.tvDuration = tvDuration;
    this.tvWorkoutDescription = tvWorkoutDescription;
    this.tvWorkoutName = tvWorkoutName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemWorkoutFeaturedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemWorkoutFeaturedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_workout_featured, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemWorkoutFeaturedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnStartWorkout;
      MaterialButton btnStartWorkout = ViewBindings.findChildViewById(rootView, id);
      if (btnStartWorkout == null) {
        break missingId;
      }

      id = R.id.cardWorkoutIcon;
      MaterialCardView cardWorkoutIcon = ViewBindings.findChildViewById(rootView, id);
      if (cardWorkoutIcon == null) {
        break missingId;
      }

      id = R.id.chipCategory;
      Chip chipCategory = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory == null) {
        break missingId;
      }

      id = R.id.chipDifficulty;
      Chip chipDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (chipDifficulty == null) {
        break missingId;
      }

      id = R.id.imgWorkoutIcon;
      ImageView imgWorkoutIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgWorkoutIcon == null) {
        break missingId;
      }

      id = R.id.layoutWorkoutDetails;
      LinearLayout layoutWorkoutDetails = ViewBindings.findChildViewById(rootView, id);
      if (layoutWorkoutDetails == null) {
        break missingId;
      }

      id = R.id.layoutWorkoutInfo;
      LinearLayout layoutWorkoutInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutWorkoutInfo == null) {
        break missingId;
      }

      id = R.id.layoutWorkoutStats;
      LinearLayout layoutWorkoutStats = ViewBindings.findChildViewById(rootView, id);
      if (layoutWorkoutStats == null) {
        break missingId;
      }

      id = R.id.tvCalories;
      TextView tvCalories = ViewBindings.findChildViewById(rootView, id);
      if (tvCalories == null) {
        break missingId;
      }

      id = R.id.tvDuration;
      TextView tvDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvDuration == null) {
        break missingId;
      }

      id = R.id.tvWorkoutDescription;
      TextView tvWorkoutDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvWorkoutDescription == null) {
        break missingId;
      }

      id = R.id.tvWorkoutName;
      TextView tvWorkoutName = ViewBindings.findChildViewById(rootView, id);
      if (tvWorkoutName == null) {
        break missingId;
      }

      return new ItemWorkoutFeaturedBinding((MaterialCardView) rootView, btnStartWorkout,
          cardWorkoutIcon, chipCategory, chipDifficulty, imgWorkoutIcon, layoutWorkoutDetails,
          layoutWorkoutInfo, layoutWorkoutStats, tvCalories, tvDuration, tvWorkoutDescription,
          tvWorkoutName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
